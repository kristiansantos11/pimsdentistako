<UserControl x:Class="pimsdentistako.Views.DentistView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:pimsdentistako.Views"
             mc:Ignorable="d" 
             d:DesignHeight="1080" d:DesignWidth="1440"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <UserControl.Resources>
        <Style x:Key="ItemsPresenterStyle1" TargetType="{x:Type ItemsPresenter}">
            <Setter Property="TextElement.FontFamily" Value="{StaticResource LEMON MILK Light}"/>
        </Style>
        <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
                            <Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridColumnHeadersPresenterStyle1" TargetType="{x:Type DataGridColumnHeadersPresenter}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
                        <Grid>
                            <DataGridColumnHeader x:Name="PART_FillerColumnHeader" IsHitTestVisible="False"/>
                            <ItemsPresenter/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="#FF688CAF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.All}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <DataGridColumnHeadersPresenter Style="{DynamicResource DataGridColumnHeadersPresenterStyle1}" x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.ColumnSpan="2" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" ViewportSize="{TemplateBinding ViewportHeight}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Background" Value="#bd7e4a"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="MinHeight" Value="50"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="SizeWE"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridColumnHeaderStyle1" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background" Value="#bd7e4a"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="MinHeight" Value="50"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid>
                            <theme:DataGridHeaderBorder Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SortDirection="{TemplateBinding SortDirection}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                                <ContentPresenter HorizontalAlignment="Center" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </theme:DataGridHeaderBorder>
                            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Border Padding="20"
            Background="White">
        <Grid Margin="0,0,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>         <!-- TEXT BLOCKS = DENTIST NAME,ID -->      <!-- buttons new and edit-->
                <ColumnDefinition/>         <!--TEXT BOXES-->                           <!-- button delete -->

            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="320"/>            <!--text blocks and text boxes-->
                <RowDefinition Height="400"/>            <!--datagrid-->
                <RowDefinition Height="120"/>            <!--buttons-->
            </Grid.RowDefinitions>

            <StackPanel Grid.Column="0" Grid.Row="0">
                <TextBlock Text="Dentist" FontSize="80" Foreground="#191715" FontFamily="{StaticResource Rounded Elegance}"/>
            </StackPanel>
            
            
            <!--text blocks and text boxes-->
            <StackPanel Grid.Row="1" Grid.Column="0" Margin="20,0,0,60">
                <TextBlock Text="First Name" FontSize="30" FontFamily="{StaticResource LEMON MILK Light}" />
                <TextBlock Text="Middle Name" FontSize="30" Margin="0,5,0,0" FontFamily="{StaticResource LEMON MILK Light}"/>
                <TextBlock Text="Last Name" FontSize="30" Margin="0,5,0,0" FontFamily="{StaticResource LEMON MILK Light}" />
                <TextBlock Text="Suffix (Optional)" FontSize="30" Margin="0,5,0,0" FontFamily="{StaticResource LEMON MILK Light}"/>
                <TextBlock Text="License Number" FontSize="30" Margin="0,5,0,0" FontFamily="{StaticResource LEMON MILK Light}"/>
                <TextBlock Text="Ptr. Number" FontSize="30" Margin="0,5,0,0" FontFamily="{StaticResource LEMON MILK Light}"/>
            </StackPanel>

            
            <!--text blocks and text boxes-->
            <StackPanel Grid.Row="1" Grid.Column="1" Margin="0,0,20,0" >
                <TextBox  VerticalContentAlignment="Center" Height="40" x:Name="txtFirst" FontSize="30"/>
                <TextBox   VerticalContentAlignment="Center" Margin="0,5,0,0" Height="40" x:Name="txtMiddle" FontSize="30"/>
                <TextBox   VerticalContentAlignment="Center" Margin="0,5,0,0" Height="40" x:Name="txtLast" FontSize="30"/>
                <TextBox   VerticalContentAlignment="Center" Margin="0,5,0,0" Height="40" x:Name="txtSuffix" FontSize="30"/>
                <TextBox   VerticalContentAlignment="Center" Margin="0,5,0,0" Height="40" x:Name="txtLicense" FontSize="30"/>
                <TextBox   VerticalContentAlignment="Center" Margin="0,5,0,0"  Height="40" x:Name="txtPtr" FontSize="30"/>
            </StackPanel>

            
            <!--datagrid-->
            <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
                <DataGrid ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}"
                          Style="{DynamicResource DataGridStyle1}"
                          Height="400" 
                          MaxWidth="1300" Margin="0,0,0,0"
                          SelectionChanged="dg_SelectionChanged"
                          FontFamily="{StaticResource Rounded Elegance}"
                          IsReadOnly="True"
                          CanUserReorderColumns="False"
                          CanUserSortColumns="False"
                          CanUserDeleteRows="False"
                          CanUserResizeRows="False"
                          AutoGenerateColumns="False"
                          x:Name="dentistDataGrid"
                          FontSize="30">        
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Path=DentistID}" Width="*" Header="ID" MinWidth="200" FontFamily="{StaticResource Rounded Elegance}"/>
                        <DataGridTextColumn Binding="{Binding Path=DentistFullName}" Width="*" Header="Dentist Name" MinWidth="400" FontFamily="{StaticResource Rounded Elegance}"/>
                        <DataGridTextColumn Binding="{Binding Path=DentistLicenseNumber}" Width="*" Header="License Number" MinWidth="200" FontFamily="{StaticResource Rounded Elegance}"/>
                        <DataGridTextColumn Binding="{Binding Path=DentistPTRNumber}" Width="*" Header="Ptr Number" MinWidth="200" FontFamily="{StaticResource Rounded Elegance}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </StackPanel>

            
            <!--buttons-->
            <StackPanel Grid.Row="3" 
                        Grid.Column="0" 
                        Grid.ColumnSpan="2"
                        Orientation="Horizontal"
                        HorizontalAlignment="Center">
                <Button Content="New"
                        Height="50"
                        Width="200"
                        Foreground="White"
                        FontSize="20"
                        Name="New_btn"
                        FontFamily="{StaticResource Rounded Elegance}"
                        Click="New_btn_Click"
                        Margin="40,0,40,0">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="#83502E"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#a26838"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Width="{TemplateBinding Width}"
                                        Height="{TemplateBinding Height}"
                                        CornerRadius="30,30,30,30"
                                        Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center"
                                                      HorizontalAlignment="CENTER"
                                                      Margin="0,0,0,0"/>
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button Content="Edit" Height="50" Width="200" Margin="40,0,40,0" Foreground="White" FontSize="20" Name="Edit_btn" FontFamily="{StaticResource Rounded Elegance}" Click="Edit_btn_Click">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="#bd7e4a"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#a26838"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Width="{TemplateBinding Width}"
                                        Height="{TemplateBinding Height}"
                                        CornerRadius="30,30,30,30"
                                        Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center"
                                                      HorizontalAlignment="CENTER"
                                                      Margin="0,0,0,0"/>
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button Content="Delete" Margin="40,0,40,0" Height="50" Width="200" Foreground="White" FontSize="20" Name="Delete_btn" FontFamily="{StaticResource Rounded Elegance}" Click="Delete_btn_Click">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="#31170a"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#a26838"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Width="{TemplateBinding Width}"
                                        Height="{TemplateBinding Height}"
                                        CornerRadius="30,30,30,30"
                                        Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center"
                                                      HorizontalAlignment="CENTER"
                                                      Margin="0,0,0,0"/>
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </StackPanel>

            <!--PANGALAN NG MGA TEXT BOX-->
            
            
            <!--txtFirst-->
            <!--txtMiddle-->
            <!--txtLast-->
            <!--txtSuffix-->
            <!--txtLicense-->
            <!--txtPtr-->



            <!--PANGALAN NG MGA BUTTON-->
            <!--New_btn-->
            <!--Edit_btn-->
            <!--Delete_btn-->


        </Grid>
    </Border>
</UserControl>
    
    
